/** You are given a set of coins S. In how many ways can you make sum N assuming you have infinite amount of each coin in the set.

Note : Coins in set S will be unique. Expected space complexity of this problem is O(N). */

public class Solution {
    
    public int coinchange2(int[] A, int B) {
        int m = A.length,i,j;
        int[][] t = new int[m+1][B+1];
        int MOD = 1000007;
        
        for(i = 0; i <=m ; i++){
            t[i][0] = 1;
        }
        
        for(i = 1; i <= m; i++){
            for(j = 1; j <= B; j++){
                
                if(A[i-1] <= j)
                    t[i][j] = (t[i][j-A[i-1]] + t[i-1][j])%MOD;
                
                else
                    t[i][j] = t[i-1][j]%MOD;
            }
        }
        return t[m][B]%MOD;
        
    }
}
